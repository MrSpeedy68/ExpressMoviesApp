{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\MrSpeedy\\\\Desktop\\\\Local Github\\\\MoviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\MrSpeedy\\\\Desktop\\\\Local Github\\\\MoviesApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\MrSpeedy\\\\Desktop\\\\Local Github\\\\MoviesApp\\\\src\\\\contexts\\\\moviesContext.js\";\nimport React, { useEffect, createContext, useReducer } from \"react\";\nimport { getMovies, getUpcomingMovies, getMostPopular, getTopRated, getNowPlaying } from \"../api/tmdb-api\";\nexport var MoviesContext = createContext(null);\n\nvar reducer = (state, action) => {\n  switch (action.type) {\n    case \"add-favorite\":\n      return {\n        movies: state.movies.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          favorite: true\n        }) : m),\n        mostpopular: state.mostpopular.map(p => p.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, p), {}, {\n          favourite: true\n        }) : p),\n        nowplaying: state.nowplaying.map(n => n.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, n), {}, {\n          favourite: true\n        }) : n),\n        upcoming: [...state.upcoming],\n        // mostpopular: [...state.mostpopular],\n        nowplaying: [...state.nowplaying],\n        toprated: [...state.toprated]\n      };\n\n    case \"add-watchlist\":\n      return {\n        upcoming: state.upcoming.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          watchlist: true\n        }) : m),\n        movies: [...state.movies],\n        mostpopular: [...state.mostpopular],\n        toprated: [...state.toprated],\n        nowplaying: [...state.nowplaying]\n      };\n\n    case \"load\":\n      return {\n        movies: action.payload.movies,\n        upcoming: [...state.upcoming],\n        mostpopular: [...state.mostpopular],\n        toprated: [...state.toprated],\n        nowplaying: [...state.nowplaying]\n      };\n\n    case \"load-upcoming\":\n      return {\n        upcoming: action.payload.movies,\n        movies: [...state.movies],\n        mostpopular: [...state.mostpopular],\n        toprated: [...state.toprated],\n        nowplaying: [...state.nowplaying]\n      };\n\n    case \"load-mostpopular\":\n      return {\n        mostpopular: action.payload.movies,\n        upcoming: [...state.upcoming],\n        movies: [...state.movies],\n        toprated: [...state.toprated],\n        nowplaying: [...state.nowplaying]\n      };\n\n    case \"load-toprated\":\n      return {\n        toprated: action.payload.movies,\n        upcoming: [...state.upcoming],\n        movies: [...state.movies],\n        mostpopular: [...state.mostpopular],\n        nowplaying: [...state.nowplaying]\n      };\n\n    case \"load-nowplaying\":\n      return {\n        nowplaying: action.payload.movies,\n        upcoming: [...state.upcoming],\n        movies: [...state.movies],\n        mostpopular: [...state.mostpopular],\n        toprated: [...state.toprated]\n      };\n\n    case \"add-review\":\n      return {\n        movies: state.movies.map(m => m.id === action.payload.movie.id ? _objectSpread(_objectSpread({}, m), {}, {\n          review: action.payload.review\n        }) : m),\n        upcoming: [...state.upcoming],\n        mostpopular: [...state.mostpopular],\n        toprated: [...state.toprated],\n        nowplaying: [...state.nowplaying]\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar MoviesContextProvider = props => {\n  var _useReducer = useReducer(reducer, {\n    movies: [],\n    upcoming: [],\n    mostpopular: [],\n    toprated: [],\n    nowplaying: []\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var addToFavorites = movieId => {\n    var index = state.movies.map(m => m.id).indexOf(movieId);\n    dispatch({\n      type: \"add-favorite\",\n      payload: {\n        movie: state.movies[index],\n        mostpopular: state.mostpopular[index],\n        toprated: state.toprated[index],\n        nowplaying: state.nowplaying[index]\n      }\n    });\n  };\n\n  var addToWatchList = movieId => {\n    var index = state.upcoming.map(m => m.id).indexOf(movieId);\n    dispatch({\n      type: \"add-watchlist\",\n      payload: {\n        movie: state.upcoming[index]\n      }\n    });\n  };\n\n  var addReview = (movie, review) => {\n    dispatch({\n      type: \"add-review\",\n      payload: {\n        movie,\n        review\n      }\n    });\n  };\n\n  useEffect(() => {\n    getMovies().then(movies => {\n      dispatch({\n        type: \"load\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    getUpcomingMovies().then(movies => {\n      dispatch({\n        type: \"load-upcoming\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    getMostPopular().then(movies => {\n      dispatch({\n        type: \"load-mostpopular\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    getTopRated().then(movies => {\n      dispatch({\n        type: \"load-toprated\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    getNowPlaying().then(movies => {\n      dispatch({\n        type: \"load-nowplaying\",\n        payload: {\n          movies\n        }\n      });\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(MoviesContext.Provider, {\n    value: {\n      movies: state.movies,\n      upcoming: state.upcoming,\n      mostpopular: state.mostpopular,\n      toprated: state.toprated,\n      nowplaying: state.nowplaying,\n      addToFavorites: addToFavorites,\n      addToWatchList: addToWatchList,\n      addReview: addReview\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default MoviesContextProvider;","map":{"version":3,"sources":["C:/Users/MrSpeedy/Desktop/Local Github/MoviesApp/src/contexts/moviesContext.js"],"names":["React","useEffect","createContext","useReducer","getMovies","getUpcomingMovies","getMostPopular","getTopRated","getNowPlaying","MoviesContext","reducer","state","action","type","movies","map","m","id","payload","movie","favorite","mostpopular","p","favourite","nowplaying","n","upcoming","toprated","watchlist","review","MoviesContextProvider","props","dispatch","addToFavorites","movieId","index","indexOf","addToWatchList","addReview","then","children"],"mappings":"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","sourcesContent":["import React, { useEffect, createContext, useReducer } from \"react\";\r\nimport { getMovies, getUpcomingMovies, getMostPopular, getTopRated, getNowPlaying } from \"../api/tmdb-api\";\r\n\r\nexport const MoviesContext = createContext(null);\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add-favorite\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, favorite: true } : m\r\n        ),\r\n        mostpopular: state.mostpopular.map((p) =>\r\n         p.id === action.payload.movie.id ? { ...p, favourite: true } : p\r\n        ),\r\n        nowplaying: state.nowplaying.map((n) =>\r\n         n.id === action.payload.movie.id ? { ...n, favourite: true } : n\r\n        ),\r\n\r\n        upcoming: [...state.upcoming],\r\n        // mostpopular: [...state.mostpopular],\r\n        nowplaying: [...state.nowplaying],\r\n        toprated: [...state.toprated],\r\n      };\r\n    case \"add-watchlist\":\r\n      return {\r\n        upcoming: state.upcoming.map((m) =>\r\n          m.id === action.payload.movie.id ? { ...m, watchlist: true} : m\r\n          ),\r\n          movies: [...state.movies],\r\n          mostpopular: [...state.mostpopular],\r\n          toprated: [...state.toprated],\r\n          nowplaying: [...state.nowplaying]\r\n      };\r\n    case \"load\":\r\n      return { movies: action.payload.movies, upcoming: [...state.upcoming], mostpopular: [...state.mostpopular],\r\n         toprated: [...state.toprated], nowplaying: [...state.nowplaying] };\r\n    case \"load-upcoming\":\r\n      return { upcoming: action.payload.movies, movies: [...state.movies], mostpopular: [...state.mostpopular],\r\n         toprated: [...state.toprated], nowplaying: [...state.nowplaying] };\r\n    case \"load-mostpopular\":\r\n      return { mostpopular: action.payload.movies, upcoming: [...state.upcoming], movies: [...state.movies],\r\n         toprated: [...state.toprated], nowplaying: [...state.nowplaying] };\r\n    case \"load-toprated\":\r\n      return { toprated: action.payload.movies, upcoming: [...state.upcoming], movies: [...state.movies],\r\n         mostpopular: [...state.mostpopular], nowplaying: [...state.nowplaying] };\r\n    case \"load-nowplaying\":\r\n      return { nowplaying: action.payload.movies, upcoming: [...state.upcoming], movies: [...state.movies],\r\n         mostpopular: [...state.mostpopular], toprated: [...state.toprated] };\r\n    case \"add-review\":\r\n      return {\r\n        movies: state.movies.map((m) =>\r\n          m.id === action.payload.movie.id\r\n            ? { ...m, review: action.payload.review }\r\n            : m\r\n        ),\r\n        upcoming: [...state.upcoming],\r\n        mostpopular: [...state.mostpopular],\r\n        toprated: [...state.toprated],\r\n        nowplaying: [...state.nowplaying],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MoviesContextProvider = (props) => {\r\n  const [state, dispatch] = useReducer(reducer, { movies: [], upcoming: [],\r\n     mostpopular: [], toprated: [], nowplaying: [] });\r\n\r\n  const addToFavorites = (movieId) => {\r\n    const index = state.movies.map((m) => m.id).indexOf(movieId);\r\n    dispatch({ type: \"add-favorite\", payload: { movie: state.movies[index], mostpopular: state.mostpopular[index],\r\n       toprated: state.toprated[index], nowplaying: state.nowplaying[index] } });\r\n  };\r\n\r\n  const addToWatchList = (movieId) => {\r\n    const index = state.upcoming.map((m) => m.id).indexOf(movieId);\r\n    dispatch({ type: \"add-watchlist\", payload: { movie: state.upcoming[index] } });\r\n  };\r\n\r\n  const addReview = (movie, review) => {\r\n    dispatch({ type: \"add-review\", payload: { movie, review } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovies().then((movies) => {\r\n      dispatch({ type: \"load\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUpcomingMovies().then((movies) => {\r\n      dispatch({ type: \"load-upcoming\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getMostPopular().then((movies) => {\r\n      dispatch({ type: \"load-mostpopular\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getTopRated().then((movies) => {\r\n      dispatch({ type: \"load-toprated\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getNowPlaying().then((movies) => {\r\n      dispatch({ type: \"load-nowplaying\", payload: { movies } });\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        upcoming: state.upcoming,\r\n        mostpopular: state.mostpopular,\r\n        toprated: state.toprated,\r\n        nowplaying: state.nowplaying,\r\n        addToFavorites: addToFavorites,\r\n        addToWatchList: addToWatchList,\r\n        addReview: addReview,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MoviesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MoviesContextProvider;"]},"metadata":{},"sourceType":"module"}